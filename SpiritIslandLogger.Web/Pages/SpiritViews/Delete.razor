@page "/spirit/{SpiritId:int}/delete/"

@using SpiritIslandLogger.Web.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<h2>Delete</h2>
<h3>Are you sure you want to delete this?</h3>

@if (spirit == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <dl class="">
        <dt>
            Name
        </dt>
        <dd>
            @spirit.Name
        </dd>
    </dl>
}

<EditForm OnSubmit="DeleteSpirit" Model="SpiritId">
    <input type="submit" value="Delete" class="btn btn-danger" /> |
    <NavLink href="./"><button class="btn">Cancel</button></NavLink>
</EditForm>
@code {
#nullable enable

    [Parameter]
    public int? SpiritId { get; set; }

    private Spirit? spirit;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (!SpiritId.HasValue)
        {
            NavigateToIndex();
            return;
        }

        spirit = await DbContext.Spirits.FindAsync(SpiritId);
        if (spirit is null)
        {
            NavigateToIndex();
        }
    }

    private async Task DeleteSpirit()
    {
        if (spirit is null)
        {
            NavigateToIndex();
            return;
        }

        DbContext.Spirits.Remove(spirit);
        await DbContext.SaveChangesAsync();
        
        NavigateToIndex();
    }

    private void NavigateToIndex()
    {
        Navigation.NavigateTo("/spirits");
    }
}