@page "/adversary/create"
@using System.ComponentModel.DataAnnotations
@using SpiritIslandLogger.Web.Data
@inject ApplicationDbContext Db
@inject NavigationManager Navigation

<h3>Create Adversary</h3>

<EditForm Model="@adversary" OnValidSubmit="@FormSubmitted">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText @bind-Value="adversary.Name" class="form-control" id="Name"></InputText>
        <ValidationMessage For="() => adversary.Name"/>
    </div>

    <div class="form-group">
        <label for="difficulty">Levels</label>
        <table id="difficulty">
            <thead>
            <tr>
                <th>
                </th>
                <th>
                    Base
                </th>
                @for (int i = 1; i <= 6; i++)
                {
                    <th>
                        Level @i
                    </th>
                }
            </tr>
            </thead>
            <tbody>
                <tr>
                    <th>Difficulty</th>

                    @foreach (var id in adversary.Levels.Select((item, id) => id))
                    {
                        adversary.Levels[id].Level = id;
                        <td>
                            <InputNumber @bind-Value="adversary.Levels[id].Difficulty"></InputNumber>
                        </td>
                    }
                </tr>
                <tr>
                    <th>Deck Size</th>
                    @foreach (var id in adversary.Levels.Select((item, id) => id))
                    {
                        <td>
                            <InputNumber @bind-Value="adversary.Levels[id].DeckSize"></InputNumber>
                        </td>
                    }
                </tr>
            </tbody>
        </table>
    </div>
    <input type="submit" value="Submit" class="btn btn-primary"/>
</EditForm>

@code {

    private class BoxedInt
    {
        [Range(1, 11)]
        public int Value { get; set; }
    }

    private class AdversaryViewModel
    {
        [Required]
        public string Name { get; set; } = "";

        public BoxedInt[] Difficulty { get; } = Enumerable.Range(1, 7).Select(i => new BoxedInt { Value = i }).ToArray();
    }

    readonly Adversary adversary = new() {Levels = Enumerable.Range(0, 7).Select(i => new AdversaryLevel{Level = i, Difficulty = i }).ToList()};

    async Task FormSubmitted()
    {
        await Db.Adversaries.AddAsync(adversary);
        await Db.SaveChangesAsync();

        Navigation.NavigateTo("/adversary");
    }

}